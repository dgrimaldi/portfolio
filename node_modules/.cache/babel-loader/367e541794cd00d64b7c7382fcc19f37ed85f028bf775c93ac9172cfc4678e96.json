{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nimport * as d3 from 'd3';\nconst useD3 = (renderSvgFn, selectedNumber) => {\n  _s();\n  const ref = useRef(null);\n  useEffect(() => {\n    console.log({\n      aa: ref.current\n    });\n    //if (ref.current != null){\n    // @ts-ignore\n    renderSvgFn(d3.select(ref.current), selectedNumber(1000));\n    //}\n    return () => {\n      ref.current = null;\n    };\n  }, [renderSvgFn, selectedNumber]);\n  return ref;\n};\n_s(useD3, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\nexport default useD3;","map":{"version":3,"names":["useEffect","useRef","d3","useD3","renderSvgFn","selectedNumber","_s","ref","console","log","aa","current","select"],"sources":["/home/dgrimaldi/Documents/portfolio/src/hooks/useD3.ts"],"sourcesContent":["import {useEffect, useRef} from \"react\";\nimport * as d3 from 'd3';\nimport {BaseType} from \"d3\";\nconst useD3 = (renderSvgFn: (svg: d3.Selection<BaseType, unknown, HTMLElement, SVGElement>, totalCircles: number) => d3.Selection<BaseType, unknown, HTMLElement, SVGElement>,selectedNumber :(i:number)=> number) => {\n  const ref = useRef(null)\n\n    useEffect(() => {\n        console.log({aa:ref.current})\n        //if (ref.current != null){\n            // @ts-ignore\n        renderSvgFn(d3.select(ref.current), selectedNumber(1000))\n        //}\n        return () => {\n            ref.current = null\n        }\n    }, [renderSvgFn, selectedNumber])\n    return ref;\n}\n\nexport default useD3;"],"mappings":";AAAA,SAAQA,SAAS,EAAEC,MAAM,QAAO,OAAO;AACvC,OAAO,KAAKC,EAAE,MAAM,IAAI;AAExB,MAAMC,KAAK,GAAGA,CAACC,WAA8J,EAACC,cAAmC,KAAK;EAAAC,EAAA;EACpN,MAAMC,GAAG,GAAGN,MAAM,CAAC,IAAI,CAAC;EAEtBD,SAAS,CAAC,MAAM;IACZQ,OAAO,CAACC,GAAG,CAAC;MAACC,EAAE,EAACH,GAAG,CAACI;IAAO,CAAC,CAAC;IAC7B;IACI;IACJP,WAAW,CAACF,EAAE,CAACU,MAAM,CAACL,GAAG,CAACI,OAAO,CAAC,EAAEN,cAAc,CAAC,IAAI,CAAC,CAAC;IACzD;IACA,OAAO,MAAM;MACTE,GAAG,CAACI,OAAO,GAAG,IAAI;IACtB,CAAC;EACL,CAAC,EAAE,CAACP,WAAW,EAAEC,cAAc,CAAC,CAAC;EACjC,OAAOE,GAAG;AACd,CAAC;AAAAD,EAAA,CAdKH,KAAK;AAgBX,eAAeA,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}