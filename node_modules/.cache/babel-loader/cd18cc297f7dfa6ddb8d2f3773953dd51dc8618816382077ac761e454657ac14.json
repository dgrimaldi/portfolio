{"ast":null,"code":"import*as d3 from\"d3\";var graphDimension={width:600,height:450};var radius=100;export var d3CircularPacking=function d3CircularPacking(svg){// create dummy data -> just one element per circle\nvar data=d3.range(1000).map(function(){return{};});// Initialize the circle: all located at the center of the svg area\nvar node=svg.append(\"g\").selectAll(\"circle\").data(data).enter().append(\"circle\").attr(\"r\",15).attr(\"cx\",graphDimension.width).attr(\"cy\",250).style(\"fill\",\"#69b3a2\").style(\"fill-opacity\",0.3).attr(\"stroke\",\"#69a2b2\").style(\"stroke-width\",4);// @ts-ignore\nnode.call(d3.drag().on(\"start\",started).on(\"drag\",dragged).on(\"end\",ended));function ticked(){node.attr(\"cx\",function(d){return d.x;}).attr(\"cy\",function(d){return d.y;});}var simulation=d3.forceSimulation(data).force(\"collide\",d3.forceCollide(radius).iterations(4)).on(\"tick\",ticked);function started(event){if(!event.active)simulation.alphaTarget(0.3).restart();event.subject.fx=event.subject.x;event.subject.fy=event.subject.y;}function dragged(event){event.subject.fx=event.x;event.subject.fy=event.y;}function ended(event){if(!event.active)simulation.alphaTarget(0);event.subject.fx=null;event.subject.fy=null;}return svg;};","map":{"version":3,"names":["d3","graphDimension","width","height","radius","d3CircularPacking","svg","data","range","map","node","append","selectAll","enter","attr","style","call","drag","on","started","dragged","ended","ticked","d","x","y","simulation","forceSimulation","force","forceCollide","iterations","event","active","alphaTarget","restart","subject","fx","fy"],"sources":["/home/dgrimaldi/Documents/portfolio/src/d3/D3CircularPacking.ts"],"sourcesContent":["import {SimulationNodeDatum} from \"d3\";\nimport * as d3 from \"d3\";\nconst graphDimension: { width: number, height: number } = { width: 600, height: 450};\nconst radius = 100;\nexport const d3CircularPacking = (svg: d3.Selection<d3.BaseType, unknown, HTMLElement, SVGElement>) => {\n\n        // create dummy data -> just one element per circle\n        let data: SimulationNodeDatum[] = d3.range(1000).map(() => ({}))\n\n        // Initialize the circle: all located at the center of the svg area\n        const node: d3.Selection<SVGCircleElement, SimulationNodeDatum, SVGGElement, unknown> = svg.append(\"g\")\n            .selectAll(\"circle\")\n            .data(data)\n            .enter()\n            .append(\"circle\")\n            .attr(\"r\", 15)\n            .attr(\"cx\", graphDimension.width)\n            .attr(\"cy\", 250)\n            .style(\"fill\", \"#69b3a2\")\n            .style(\"fill-opacity\", 0.3)\n            .attr(\"stroke\", \"#69a2b2\")\n            .style(\"stroke-width\", 4)\n\n\n        // @ts-ignore\n        node.call(d3.drag()\n            .on(\"start\", started)\n            .on(\"drag\", dragged)\n            .on(\"end\", ended));\n        function ticked() {\n            node\n                .attr(\"cx\", (d:any) => d.x)\n                .attr(\"cy\", (d:any)  => d.y);\n        }\n\n        const simulation = d3.forceSimulation(data)\n            .force(\"collide\", d3.forceCollide(radius).iterations(4))\n            .on(\"tick\", ticked);\n        function started(event:any) {\n            if (!event.active) simulation.alphaTarget(0.3).restart();\n            event.subject.fx = event.subject.x;\n            event.subject.fy = event.subject.y;\n        }\n\n        function dragged(event:any) {\n            event.subject.fx = event.x;\n            event.subject.fy = event.y;\n        }\n\n        function ended(event:any) {\n            if (!event.active) simulation.alphaTarget(0);\n            event.subject.fx = null;\n            event.subject.fy = null;\n        }\n        return svg\n\n}"],"mappings":"AACA,MAAO,GAAK,CAAAA,EAAE,KAAM,IAAI,CACxB,GAAM,CAAAC,cAAiD,CAAG,CAAEC,KAAK,CAAE,GAAG,CAAEC,MAAM,CAAE,GAAG,CAAC,CACpF,GAAM,CAAAC,MAAM,CAAG,GAAG,CAClB,MAAO,IAAM,CAAAC,iBAAiB,CAAG,QAApB,CAAAA,iBAAiBA,CAAIC,GAAgE,CAAK,CAE/F;AACA,GAAI,CAAAC,IAA2B,CAAGP,EAAE,CAACQ,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAAC,iBAAO,CAAC,CAAC,EAAC,CAAC,CAEhE;AACA,GAAM,CAAAC,IAA+E,CAAGJ,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAClGC,SAAS,CAAC,QAAQ,CAAC,CACnBL,IAAI,CAACA,IAAI,CAAC,CACVM,KAAK,CAAC,CAAC,CACPF,MAAM,CAAC,QAAQ,CAAC,CAChBG,IAAI,CAAC,GAAG,CAAE,EAAE,CAAC,CACbA,IAAI,CAAC,IAAI,CAAEb,cAAc,CAACC,KAAK,CAAC,CAChCY,IAAI,CAAC,IAAI,CAAE,GAAG,CAAC,CACfC,KAAK,CAAC,MAAM,CAAE,SAAS,CAAC,CACxBA,KAAK,CAAC,cAAc,CAAE,GAAG,CAAC,CAC1BD,IAAI,CAAC,QAAQ,CAAE,SAAS,CAAC,CACzBC,KAAK,CAAC,cAAc,CAAE,CAAC,CAAC,CAG7B;AACAL,IAAI,CAACM,IAAI,CAAChB,EAAE,CAACiB,IAAI,CAAC,CAAC,CACdC,EAAE,CAAC,OAAO,CAAEC,OAAO,CAAC,CACpBD,EAAE,CAAC,MAAM,CAAEE,OAAO,CAAC,CACnBF,EAAE,CAAC,KAAK,CAAEG,KAAK,CAAC,CAAC,CACtB,QAAS,CAAAC,MAAMA,CAAA,CAAG,CACdZ,IAAI,CACCI,IAAI,CAAC,IAAI,CAAE,SAACS,CAAK,QAAK,CAAAA,CAAC,CAACC,CAAC,GAAC,CAC1BV,IAAI,CAAC,IAAI,CAAE,SAACS,CAAK,QAAM,CAAAA,CAAC,CAACE,CAAC,GAAC,CACpC,CAEA,GAAM,CAAAC,UAAU,CAAG1B,EAAE,CAAC2B,eAAe,CAACpB,IAAI,CAAC,CACtCqB,KAAK,CAAC,SAAS,CAAE5B,EAAE,CAAC6B,YAAY,CAACzB,MAAM,CAAC,CAAC0B,UAAU,CAAC,CAAC,CAAC,CAAC,CACvDZ,EAAE,CAAC,MAAM,CAAEI,MAAM,CAAC,CACvB,QAAS,CAAAH,OAAOA,CAACY,KAAS,CAAE,CACxB,GAAI,CAACA,KAAK,CAACC,MAAM,CAAEN,UAAU,CAACO,WAAW,CAAC,GAAG,CAAC,CAACC,OAAO,CAAC,CAAC,CACxDH,KAAK,CAACI,OAAO,CAACC,EAAE,CAAGL,KAAK,CAACI,OAAO,CAACX,CAAC,CAClCO,KAAK,CAACI,OAAO,CAACE,EAAE,CAAGN,KAAK,CAACI,OAAO,CAACV,CAAC,CACtC,CAEA,QAAS,CAAAL,OAAOA,CAACW,KAAS,CAAE,CACxBA,KAAK,CAACI,OAAO,CAACC,EAAE,CAAGL,KAAK,CAACP,CAAC,CAC1BO,KAAK,CAACI,OAAO,CAACE,EAAE,CAAGN,KAAK,CAACN,CAAC,CAC9B,CAEA,QAAS,CAAAJ,KAAKA,CAACU,KAAS,CAAE,CACtB,GAAI,CAACA,KAAK,CAACC,MAAM,CAAEN,UAAU,CAACO,WAAW,CAAC,CAAC,CAAC,CAC5CF,KAAK,CAACI,OAAO,CAACC,EAAE,CAAG,IAAI,CACvBL,KAAK,CAACI,OAAO,CAACE,EAAE,CAAG,IAAI,CAC3B,CACA,MAAO,CAAA/B,GAAG,CAElB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}