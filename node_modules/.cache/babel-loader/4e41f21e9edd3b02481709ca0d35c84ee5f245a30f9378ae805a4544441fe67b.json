{"ast":null,"code":"var _jsxFileName = \"/home/dgrimaldi/Documents/portfolio/src/features/CircularPacking/CircularPacking.tsx\",\n  _s = $RefreshSig$();\nimport useD3 from \"../../hooks/useD3\";\nimport { d3CircularPacking } from \"../../d3/D3CircularPacking\";\nimport './style.scss';\nimport React, { useMemo, useState } from \"react\";\nimport { InputNumber } from \"antd\";\nimport InfoMessage from \"../../components/InfoMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst message = `Welcome from Davide, try to insert a number between 1 and 1000 to see more interactive circles`;\nconst CircularPacking = () => {\n  _s();\n  const [selectedNumber, setSelectedNumber] = useState(1);\n  const numberOfCircle = useMemo(() => Number(selectedNumber), [selectedNumber]);\n  const ref = useD3(svg => d3CircularPacking(svg, numberOfCircle), [numberOfCircle]);\n  const handleChange = value => {\n    if (value !== null) {\n      setSelectedNumber(value);\n    }\n  };\n  const handleStep = (value, info) => {\n    if (info.type === 'up') {\n      setSelectedNumber(prevValue => {\n        const newValue = prevValue * prevValue;\n        if (newValue <= 1000) {\n          return newValue;\n        } else {\n          1000;\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InfoMessage, {\n      content: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputNumber, {\n      min: 1,\n      max: 1000,\n      onChange: handleChange,\n      defaultValue: selectedNumber,\n      style: {\n        width: '100%'\n      },\n      onStep: handleStep\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: ref,\n      className: \"img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(CircularPacking, \"CpR8m8rSj5oxEFpnMlIYQcFBarc=\", false, function () {\n  return [useD3];\n});\n_c = CircularPacking;\nexport default CircularPacking;\nvar _c;\n$RefreshReg$(_c, \"CircularPacking\");","map":{"version":3,"names":["useD3","d3CircularPacking","React","useMemo","useState","InputNumber","InfoMessage","jsxDEV","_jsxDEV","Fragment","_Fragment","message","CircularPacking","_s","selectedNumber","setSelectedNumber","numberOfCircle","Number","ref","svg","handleChange","value","handleStep","info","type","prevValue","newValue","children","content","fileName","_jsxFileName","lineNumber","columnNumber","min","max","onChange","defaultValue","style","width","onStep","className","_c","$RefreshReg$"],"sources":["/home/dgrimaldi/Documents/portfolio/src/features/CircularPacking/CircularPacking.tsx"],"sourcesContent":["import useD3 from \"../../hooks/useD3\";\nimport {d3CircularPacking} from \"../../d3/D3CircularPacking\";\nimport './style.scss'\nimport React, {useEffect, useMemo, useState} from \"react\";\nimport {InputNumber} from \"antd\";\nimport InfoMessage from \"../../components/InfoMessage\";\n\nconst message = `Welcome from Davide, try to insert a number between 1 and 1000 to see more interactive circles`\nconst CircularPacking = () => {\n    const [selectedNumber, setSelectedNumber] = useState<1 | 1000>(1)\n    const numberOfCircle = useMemo(() => Number(selectedNumber), [selectedNumber])\n\n    const ref = useD3((svg) => d3CircularPacking(svg, numberOfCircle), [numberOfCircle]);\n    const handleChange = (value:  1 | 1000 | null) => {\n        if(value !== null) {\n            setSelectedNumber(value)\n        }\n    };\n\n    const handleStep = (value: 1 | 1000, info: {type: 'up' | 'down' }) => {\n        if( info.type === 'up') {\n            setSelectedNumber((prevValue) => {\n                const newValue = prevValue * prevValue\n                if (newValue <= 1000) {\n                    return newValue\n                } else {\n                    1000\n                }\n            })\n        }\n    }\n\n\n    return (\n        <>\n            <InfoMessage content={message}/>\n            <InputNumber\n                min={1}\n                max={1000}\n                onChange={handleChange}\n                defaultValue={selectedNumber}\n                style={{ width: '100%' }}\n                onStep={handleStep}\n            />\n            <svg ref={ref} className=\"img\"/>\n        </>)\n}\n\nexport default CircularPacking"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,mBAAmB;AACrC,SAAQC,iBAAiB,QAAO,4BAA4B;AAC5D,OAAO,cAAc;AACrB,OAAOC,KAAK,IAAcC,OAAO,EAAEC,QAAQ,QAAO,OAAO;AACzD,SAAQC,WAAW,QAAO,MAAM;AAChC,OAAOC,WAAW,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvD,MAAMC,OAAO,GAAI,gGAA+F;AAChH,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAW,CAAC,CAAC;EACjE,MAAMY,cAAc,GAAGb,OAAO,CAAC,MAAMc,MAAM,CAACH,cAAc,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC;EAE9E,MAAMI,GAAG,GAAGlB,KAAK,CAAEmB,GAAG,IAAKlB,iBAAiB,CAACkB,GAAG,EAAEH,cAAc,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC;EACpF,MAAMI,YAAY,GAAIC,KAAuB,IAAK;IAC9C,IAAGA,KAAK,KAAK,IAAI,EAAE;MACfN,iBAAiB,CAACM,KAAK,CAAC;IAC5B;EACJ,CAAC;EAED,MAAMC,UAAU,GAAGA,CAACD,KAAe,EAAEE,IAA4B,KAAK;IAClE,IAAIA,IAAI,CAACC,IAAI,KAAK,IAAI,EAAE;MACpBT,iBAAiB,CAAEU,SAAS,IAAK;QAC7B,MAAMC,QAAQ,GAAGD,SAAS,GAAGA,SAAS;QACtC,IAAIC,QAAQ,IAAI,IAAI,EAAE;UAClB,OAAOA,QAAQ;QACnB,CAAC,MAAM;UACH,IAAI;QACR;MACJ,CAAC,CAAC;IACN;EACJ,CAAC;EAGD,oBACIlB,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACInB,OAAA,CAACF,WAAW;MAACsB,OAAO,EAAEjB;IAAQ;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAChCxB,OAAA,CAACH,WAAW;MACR4B,GAAG,EAAE,CAAE;MACPC,GAAG,EAAE,IAAK;MACVC,QAAQ,EAAEf,YAAa;MACvBgB,YAAY,EAAEtB,cAAe;MAC7BuB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAO,CAAE;MACzBC,MAAM,EAAEjB;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,eACFxB,OAAA;MAAKU,GAAG,EAAEA,GAAI;MAACsB,SAAS,EAAC;IAAK;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eAClC,CAAC;AACX,CAAC;AAAAnB,EAAA,CAtCKD,eAAe;EAAA,QAILZ,KAAK;AAAA;AAAAyC,EAAA,GAJf7B,eAAe;AAwCrB,eAAeA,eAAe;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}